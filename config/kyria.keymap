/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE		0
#define SYM			1
#define FUN			2
#define FKEY		3
#define GAME		4
#define QWERTY		5

{
	    hr: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BELOW_HOME_ROW";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	    ge: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GRAVE_ESCAPE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ltw: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick_tap_ms = <200>;
            bindings = <&mo>, <&kp>;
        };
        cw: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <1>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick_tap_ms = <200>;
            bindings = <&mo>, <&caps_word>;
        };
    };                             
  	keymap { 
		compatible = "zmk,keymap";
		base_layer {
			bindings = <
&ge GRAVE ESC	&kp	Q			&kp	W			&kp	F			&kp	P		&kp	B																			&kp	J		&kp	L		&kp	U				&kp	Y				&kp	SEMI			&kp	BSLH
&kp	EQUAL		&kp A			&kp R			&kp S			&kp T		&kp	G																			&kp	M		&kp N		&kb E				&kp I				&kp O 				&kp	SQT
&kp	UNDER		&hr LGUI	Z	&hr LCTL	X	&hr LALT	C	&kp D		&kp	V			&none			&none			&none			&tog GAME		&kp	K		&kp	H		&hr LALT	COMMA	&hr LCTL	DOT		&hr	LGUI	FSLH	&kp	MINUS
												&none			&none		&ltw FKEY TAB	&ltw SYM RET 	&ltw FUN DEL 	&ltw FUN BSPC	&ltw SYM SPACE	&cw LSHFT	&none		&none
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		}; 

		symbol_layer {
			bindings = <
&kp TILDE	&kp	EXCL	&kp	AT		&kp	POUND	&kp	DLLR	&kp	PRCNT													&kp	CARET		&kp	AMPS		&kp	ASTRK		&kp	LPAR	&kp	RPAR		&kp PIPE
&kp PLUS	&kp N1		&kp N2		&kp N3		&kp N4		&kp	N5														&kp	N6			&kp N7			&kp N8			&kp N9		&kp N0			&kp DQT
&trans	 	&trans		&trans		&trans		&kp	LBKT	&kp	RBKT	&trans		&trans		&trans		&trans		&kp	LBRC		&kp	RBRC		&kp LT			&kp GT		&kp QMARK		&kp UNDER
									&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans			&trans			&trans	
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		function_layer {
			bindings = <
&kp C_MUTE			&trans		&trans		&trans		&trans		&trans														&trans			&trans		&trans		&trans		&trans		&trans	
&kp C_PP			&trans		&trans		&trans		&trans		&trans														&kp	PG_UP		&kp	LEFT	&kp	UP		&kp RIGHT	&trans		&trans	
&ge	C_PREV C_NEXT	&kp LGUI	&kp LCTL	&kp LALT	&kp LSHFT	&trans		&trans		&trans		&trans		&trans		&kp PG_DN		&kp HOME	&kp	DOWN	&kp END		&trans		&trans		
											&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans			&trans		&trans	
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};		
		
		fkey_layer {
			bindings = <
&kp C_MUTE			&kp	F9		&kp	F10		&kp	F11		&kp	F12		&trans															&trans		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_CLR	
&kp C_PP			&kp	F5		&kp	F6		&kp	F7		&kp	F8		&trans															&trans		&trans			&trans			&trans			&trans			&trans	
&ge	C_PREV C_NEXT	&kp	F1		&kp	F2		&kp	F3		&kp	F4		&trans		&trans		&trans		&kp K_SLEEP	&kp K_LOCK		&trans		&trans			&trans			&trans			&trans			&trans		
											&trans		&trans		&trans		&trans		&trans		&trans		&trans			&trans		&trans			&trans	
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
											
		game_layer {
			bindings = <
&kp N3		&kp ESC		&kp Q		&kp E		&kp F		&kp T														&trans		&trans		&trans		&trans		&trans		&trans		
&kp N2		&kp LSHFT	&kp A		&kp W		&kp D 		&kp R														&trans		&kp	LEFT	&kp	UP		&kp RIGHT	&trans		&trans	
&kp N1		&kp LCTL	&kp Z		&kp S		&kp X		&kp C		&trans		&trans		&trans		&trans		&trans		&trans		&kp	DOWN	&trans		&trans		&trans		 
									&trans		&kp LALT	&kp TAB		&kp SPACE	&kp RET		&trans		&trans		&trans		&trans		&trans	
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};	
											
		qwerty_layer {
			bindings = <
&kp ESC		&kp N1		&kp N2		&kp N3		&kp N4		&kp N5														&trans		&trans		&trans		&trans		&trans		&trans		
&kp LSHFT	&kp Q		&kp W		&kp E 		&kp R		&kp T														&trans		&kp	LEFT	&kp	UP		&kp RIGHT	&trans		&trans	
&kp LCTL	&kp A		&kp S		&kp D		&kp F		&kp G		&trans		&trans		&trans		&trans		&trans		&trans		&kp	DOWN	&trans		&trans		&trans
									&trans		&kp LALT	&kp TAB		&kp SPACE	&kp RET		&trans		&trans		&trans		&trans		&trans	
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};	
	};
};